#jinja2: lstrip_blocks: True
version: "3"
services:
  web:
    image: "{% raw %}{{ awx_web_docker_actual_image }}{% endraw %}"
    container_name: awx_web
    depends_on:
      - rabbitmq
      - memcached
      {% if postgres_host is not defined %}
      - postgres
      {% endif %}
    ports:
{% if awx_enable_nginx is sameas true %}
      {% if ssl_certificate is defined %}
      - "{{ awx_host_port_ssl }}:8053"
      {% endif %}
      - "{{ awx_host_port }}:8052"
{% else %}
      - "8051:8051"
      - "8050:8050"
{% endif %}
    hostname: {{ awx_web_hostname }}
    user: root
    restart: unless-stopped
    {% if (awx_alternate_dns_servers is defined) and (',' in awx_alternate_dns_servers) %}
    {% set awx_alternate_dns_servers_list = awx_alternate_dns_servers.split(',') %}
    dns:
    {% for awx_alternate_dns_server in awx_alternate_dns_servers_list %}
      - {{ awx_alternate_dns_server }}
    {% endfor %}
    {% elif (awx_alternate_dns_servers is defined) and (awx_alternate_dns_servers != "") %}
    dns: {{ awx_alternate_dns_servers }}
    {% endif %}
    {% if (awx_container_search_domains is defined) and (',' in awx_container_search_domains) %}
    {% set awx_container_search_domains_list = awx_container_search_domains.split(',') %}
    dns_search:
    {% for awx_container_search_domain in awx_container_search_domains_list %}
      - {{ awx_container_search_domain }}
    {% endfor %}
    {% elif (awx_container_search_domains is defined) and (awx_container_search_domains != "") %}
    dns_search: {{ awx_container_search_domains }}
    {% endif %}
    {% if (awx_extra_hosts is defined) and (',' in awx_extra_hosts) %}
    {% set awx_extra_hosts_list = awx_extra_hosts.split(',') %}
    extra_hosts:
    {% for awx_extra_host in awx_extra_hosts_list %}
      - {{ awx_extra_host }}
    {% endfor %}
    {% elif (awx_extra_hosts is defined) and (awx_extra_hosts != "") %}
    extra_hosts: [ "{{ awx_extra_hosts }}" ]
    {% endif %}
    environment:
      http_proxy: {{ awx_http_proxy | default('') }}
      https_proxy: {{ awx_https_proxy | default('') }}
      no_proxy: {{ awx_no_proxy | default('') }}
    volumes:
      - "{{ awx_docker_compose_dir }}/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "{{ awx_docker_compose_dir }}/environment.sh:/etc/tower/conf.d/environment.sh"
      - "{{ awx_docker_compose_dir }}/credentials.py:/etc/tower/conf.d/credentials.py"
      - "{{ awx_docker_compose_dir }}/{% if awx_enable_nginx is sameas true %}nginx.conf:/etc/nginx/nginx.conf{% else %}Caddyfile:/etc/caddy/Caddyfile{% endif %}:ro"
    {% if awx_project_data_dir is defined %}
      - "{{ awx_project_data_dir +':/var/lib/awx/projects:rw' }}"
    {% endif %}
    {% if awx_custom_venv_dir is defined %}
      - "{{ awx_custom_venv_dir +':'+ awx_custom_venv_dir +':rw' }}"
    {% endif %}
    {% if awx_ca_trust_dir is defined %}
      - "{{ awx_ca_trust_dir +':/etc/pki/ca-trust/source/anchors:ro' }}"
    {% endif %}
{% if awx_enable_nginx is sameas true %}
    {% if awx_ssl_certificate is defined %}
      - "{{ awx_ssl_certificate +':/etc/nginx/awxweb.pem:ro' }}"
    {% endif %}
{% else %}
    {% if awx_ssl_enabled is sameas true %}
      - "{{ awx_ssl_cert_file + ':' + awx_ssl_cert_file + ':ro' }}"
      - "{{ awx_ssl_key_file + ':' + awx_ssl_key_file + ':ro' }}"
    {% endif %}
{% endif %}
    networks:
      {{ awx_network }}:
        aliases:
          - awx_web
          - awxweb

  task:
    image: "{% raw %}{{ awx_task_docker_actual_image }}{% endraw %}"
    container_name: awx_task
    hostname: {{ awx_task_hostname }}
    user: root
    restart: unless-stopped
    depends_on:
      - rabbitmq
      - memcached
      - web
      {% if postgres_host is not defined %}
      - postgres
      {% endif %}
    {% if (awx_alternate_dns_servers is defined) and (',' in awx_alternate_dns_servers) %}
    {% set awx_alternate_dns_servers_list = awx_alternate_dns_servers.split(',') %}
    dns:
    {% for awx_alternate_dns_server in awx_alternate_dns_servers_list %}
      - {{ awx_alternate_dns_server }}
    {% endfor %}
    {% elif (awx_alternate_dns_servers is defined) and (awx_alternate_dns_servers != "") %}
    dns: "{{ awx_alternate_dns_servers }}"
    {% endif %}
    {% if (awx_container_search_domains is defined) and (',' in awx_container_search_domains) %}
    {% set awx_container_search_domains_list = awx_container_search_domains.split(',') %}
    dns_search:
    {% for awx_container_search_domain in awx_container_search_domains_list %}
      - {{ awx_container_search_domain }}
    {% endfor %}
    {% elif (awx_container_search_domains is defined) and (awx_container_search_domains != "") %}
    dns_search: "{{ awx_container_search_domains }}"
    {% endif %}
    {% if (awx_extra_hosts is defined) and (',' in awx_extra_hosts) %}
    {% set awx_extra_hosts_list = awx_extra_hosts.split(',') %}
    extra_hosts:
    {% for awx_extra_host in awx_extra_hosts_list %}
      - {{ awx_extra_host }}
    {% endfor %}
    {% elif (awx_extra_hosts is defined) and (awx_extra_hosts != "") %}
    extra_hosts: [ "{{ awx_extra_hosts }}" ]
    {% endif %}
    environment:
      http_proxy: {{ awx_http_proxy | default('') }}
      https_proxy: {{ awx_https_proxy | default('') }}
      no_proxy: {{ awx_no_proxy | default('') }}
    volumes:
      - "{{ awx_docker_compose_dir }}/SECRET_KEY:/etc/tower/SECRET_KEY"
      - "{{ awx_docker_compose_dir }}/environment.sh:/etc/tower/conf.d/environment.sh"
      - "{{ awx_docker_compose_dir }}/credentials.py:/etc/tower/conf.d/credentials.py"
    {% if awx_project_data_dir is defined %}
      - "{{ awx_project_data_dir +':/var/lib/awx/projects:rw' }}"
    {% endif %}
    {% if awx_custom_venv_dir is defined %}
      - "{{ awx_custom_venv_dir +':'+ awx_custom_venv_dir +':rw' }}"
    {% endif %}
    {% if awx_ca_trust_dir is defined %}
      - "{{ awx_ca_trust_dir +':/etc/pki/ca-trust/source/anchors:ro' }}"
    {% endif %}
{% if awx_enable_nginx is sameas true %}
    {% if awx_ssl_certificate is defined %}
      - "{{ awx_ssl_certificate +':/etc/nginx/awxweb.pem:ro' }}"
    {% endif %}
{% else %}
    {% if awx_ssl_enabled is sameas true %}
      - "{{ awx_ssl_cert_file + ':' + awx_ssl_cert_file + ':ro' }}"
      - "{{ awx_ssl_key_file + ':' + awx_ssl_key_file + ':ro' }}"
    {% endif %}
{% endif %}
    networks:
      {{ awx_network }}:
        aliases:
          - awx

  rabbitmq:
    image: "{{ rabbitmq_image }}"
    container_name: awx_rabbitmq
    restart: unless-stopped
    environment:
      RABBITMQ_DEFAULT_VHOST: "{{ rabbitmq_vhost }}"
      RABBITMQ_DEFAULT_USER: "{{ rabbitmq_user }}"
      RABBITMQ_DEFAULT_PASS: "{{ rabbitmq_password | quote }}"
      RABBITMQ_ERLANG_COOKIE: {{ rabbitmq_erlang_cookie }}
      http_proxy: {{ http_proxy | default('') }}
      https_proxy: {{ https_proxy | default('') }}
      no_proxy: {{ no_proxy | default('') }}
    networks:
      {{ awx_network }}:
        aliases:
          - rabbitmq

  memcached:
    image: "{{ memcached_image }}"
    container_name: awx_memcached
    restart: unless-stopped
    environment:
      http_proxy: {{ awx_http_proxy | default('') }}
      https_proxy: {{ awx_https_proxy | default('') }}
      no_proxy: {{ awx_no_proxy | default('') }}
    networks:
      {{ awx_network }}:
        aliases:
          - memcached

{% if postgres_host is not defined %}
  postgres:
    image: "{{ postgresql_image }}"
    container_name: awx_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: {{ postgres_user }}
      POSTGRES_PASSWORD: {{ postgres_password }}
      POSTGRES_DB: {{ postgres_db }}
      PGDATA: /var/lib/postgresql/data/pgdata
      http_proxy: {{ awx_http_proxy | default('') }}
      https_proxy: {{ awx_https_proxy | default('') }}
      no_proxy: {{ awx_no_proxy | default('') }}
    volumes:
      - "{{ postgres_data_dir }}/10/data/:/var/lib/postgresql/data:Z"
    networks:
      {{ awx_network }}:
        aliases:
          - postgres
{% endif %}

networks:
  {{ awx_network }}:
    driver: {{ awx_network_type }}
